// @strict-types
#Область ПрограммныйИнтерфейс


Функция ПолучитьIDПриложения() Экспорт

	ИдентификаторДанныеДляИнтеграции_Настройки = ВК_ИнтеграцияКлиентСервер.ИдентификаторДанныеДляИнтеграции_Настройки();
	Параметр = ВК_ИнтеграцияКлиентСервер.ИмяПараметраIDПриложения();

	IDПриложения = ВК_ОбщегоНазначения.ПолучитьПредопределенноеЗначение(ИдентификаторДанныеДляИнтеграции_Настройки,
		Параметр);

	Если Не ЗначениеЗаполнено(IDПриложения) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр(
			"ru='Не указан ID приложения, обратитесь к администратору, или введите его руками!'"));
	КонецЕсли;

	Возврат IDПриложения;

КонецФункции

Процедура СохранитьТокен(Токен = "") Экспорт

	Если ЗначениеЗаполнено(Токен) Тогда
		ИдентификаторДанныеДляИнтеграции_Настройки = ВК_ИнтеграцияКлиентСервер.ИдентификаторДанныеДляИнтеграции_Настройки();
		ПараметрТокен = ВК_ИнтеграцияКлиентСервер.ИмяПараметраТокен();

		НаборЗаписей = РегистрыСведений.ВК_ЗначенияИдентификаторовПредопределенныхЗначений.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Идентификатор.Установить(ИдентификаторДанныеДляИнтеграции_Настройки);
		НаборЗаписей.Отбор.Параметр.Установить(ПараметрТокен);
		НаборЗаписей.Очистить();
		
		Для Каждого Запись Из НаборЗаписей Цикл
			Запись.Значение = Токен;
		КонецЦикла;
		
		НаборЗаписей.Записать(Истина);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

//@skip-check module-region-empty
#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
#КонецОбласти