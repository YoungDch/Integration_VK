// @strict-types
#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыПодключения; // Структура

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Отказ = Истина Тогда
		Возврат;
	КонецЕсли;	
	
	ЗаполнитьРеквизиты();

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Декорация_ПолучитьТокенНажатие(Элемент)

	IDПриложения = ВК_ИнтеграцияВызовСервера.ПолучитьIDПриложения();

	Если ЗначениеЗаполнено(IDПриложения) Тогда
		КомандаЗапуска = КомандаЗапускаБраузера(IDПриложения);
		Если ЗначениеЗаполнено(КомандаЗапуска) Тогда
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку(КомандаЗапуска);
		Иначе
			ПоказатьОповещениеПользователя(НСтр("ru='Не задана URL строка, для получения токена, через браузер'"));
		КонецЕсли;
	Иначе
		ПоказатьОповещениеПользователя(НСтр("ru='Не задан параметр, для ID приложения.'"));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Войти(Команда)

	ВойтиНаСервере(СохранитьТокен, Токен, ПараметрыПодключения);
	ПодключитьОбработчикОжидания("ОбновитьИнтерфейсИнтерактивногоОкна", 0.5, Истина);

КонецПроцедуры

#КонецОбласти
#Область СлужебныеПроцедурыИФункции

// Команда запуска браузера.
// 
// Параметры:
//  IDПриложения - Строка
// 
// Возвращаемое значение:
//  Строка - Команда запуска браузера
&НаСервереБезКонтекста
Функция КомандаЗапускаБраузера(IDПриложения)

	ШаблонКоманды = ВК_ИнтеграцияКлиентСервер.ШаблонURLДляПолученияТокена();

	Если ЗначениеЗаполнено(ШаблонКоманды) Тогда
		URLДляЗапуска = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонКоманды, IDПриложения);
	Иначе
		URLДляЗапуска = Неопределено;
	КонецЕсли;

	Возврат URLДляЗапуска;

КонецФункции

// Войти на сервере.
// 
// Параметры:
//  СохранитьТокен - Булево - Сохранить токен
//  Токен - Строка - Токен
//  ПараметрыПодключения - Структура
&НаСервереБезКонтекста
Процедура ВойтиНаСервере(СохранитьТокен = Ложь, Токен = "", ПараметрыПодключения)

	Если Не ЗначениеЗаполнено(Токен) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = ''"));
	КонецЕсли;

	Если СохранитьТокен Тогда
		ВК_Интеграция.СохранитьТокен(Токен);
	КонецЕсли;

	ПараметрыПодключения = ВК_Интеграция.ПолучитьИнформацияОСтраницеПоТокену(Токен);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизиты()
	
	РеквизитыКЗаполнению = ВК_ОбщегоНазначения.ВК_ИнтерактивноеОкно_РеквизитыКЗаполнению();
	ИдентификаторДанныеДляИнтеграции_Настройки = ВК_ИнтеграцияКлиентСервер.ИдентификаторДанныеДляИнтеграции_Настройки();
	СоответсвиеРеквизитовКЗаполнению = ВК_ОбщегоНазначения.ПолучитьСоответствиеПараметровПредопределенныхЗначений(ИдентификаторДанныеДляИнтеграции_Настройки);
	
	Для Каждого РеквизитКЗаполнению Из РеквизитыКЗаполнению Цикл
		ЭтотОбъект[РеквизитКЗаполнению] = СоответсвиеРеквизитовКЗаполнению[РеквизитКЗаполнению];
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИнтерфейсИнтерактивногоОкна() Экспорт

	ОбщегоНазначенияКлиент.СообщитьПользователю(?(ПараметрыПодключения.АвторизацияВыполнена, "ДА", "НЕТ"));

КонецПроцедуры

#КонецОбласти

#Область Инициализация

ПараметрыПодключения = ВК_ИнтеграцияВызовСервера.ПараметрыПодключения();

#КонецОбласти

